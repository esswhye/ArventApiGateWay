#endpoints:
#  cors:
#    allow-credentials: true
#    allowed-origins: '*'
#    allowed-headers: Origin, X-Requested-With, Content-Type, Accept, Connection, User-Agent, Cookie, OCB.SYNCER.JSESSIONID
#    allowed-methods: POST,GET,DELETE,PUT
#    max-age: 1800
spring:
  cloud:
    loadbalancer:
      retry:
        enabled: true
#  profiles: dt

zuul:
  #prefix: /arvent
  #stripPrefix: true
  #ignored-patterns: /actuator/**
  #ignoredServices: "*"
  ribbon-isolation-strategy: thread
  thread-pool:
    use-separate-thread-pools: true

  retryable: true
  routes:
    #ignored-patterns: /actuator/**

    # Map path to auth service
    auth:
      path: /auth-service/**
      service-id: auth-service
      prefix: false
      sensitive-headers: Cookie,Set-Cookie
      #sensitive-headers: Cookie,Set-Cookie,Authorization
    order:
      path: /order-service/**
      serviceId: order-service
    customer:
      path: /customer-service/**
      serviceId: customer-service
    product:
      path: /product-service/**
      serviceId: product-service
    #TEST JWT
    test:
      path: /common-service/**
      serviceId: common-service

    # ribbon-isolation-strategy: thread
    #Default ->
    #sensitiveHeaders: Cookie,Set-Cookie,Authorization,User-Agent
  #sensitiveHeaders:
  # host:
  #  connect-timeout-millis: 60000
  #  socket-timeout-millis:  60000

ribbon:
  #  ReadTimeout: 10000
  #  ConnectTimeout: 10000
  eager-load:
    enabled: true
  maxAutoRetries: 0
  MaxAutoRetriesNextServer: 2
  OkToRetryOnAllOperations: true
  retryableStatusCodes: 500,404,502,-408

logging:
  level:
    org.springframework: ERROR
    com.arvent: INFO
  pattern:
    console: "%d{HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n"
    file: "%d %p %c{1.} [%t] %m%n"
  file: app.log

#https://stackoverflow.com/questions/48399400/backend-services-isolation-in-zuul
hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 60000
        #circuitBreaker:
        # enabled: false

#<ServiceName>:
#  ribbon:
#    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.AvailabilityFilteringRule

order-service:
  ribbon:
    ReadTimeout: 10000
    ConnectTimeout: 10000

customer-service:
  ribbon:
    # NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule
    ReadTimeout: 10000
    ConnectTimeout: 10000

product-service:
  ribbon:
    ReadTimeout: 10000
    ConnectTimeout: 10000

management:
  metris:
    export:
      prometheus:
        enabled:
          true

  endpoints:
    web:
      exposure:
        include: health, prometheus

security:
  jwt:
    uri: "/auth-service/**"
    header: "Authorization"
    prefix: "Bearer "
    expiration: "#{900}"
    secret: "C4C1171E3C5DBE450823FF84BA516B95547412CC465A2198152000D97E59FF64"
    #base-path: /
  #      cors:
  #        allow-credentials: true
  #        allowed-origins: '*'
  #        allowed-headers: Origin, X-Requested-With, Content-Type, Accept, Connection, User-Agent, Cookie
  #        allowed-methods: POST,GET,DELETE,PUT
  #        max-age: 1800
#  endpoint:
#    shutdown:
#      enabled: true

#  endpoint:
#    health:
#      show-details: always
